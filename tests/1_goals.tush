
$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh
|   goal 'ddd' ...
| ddd
|   goal 'ccc' ...
| ccc
|   goal 'bbb' ...
| bbb
|   goal 'aaa' ...
| aaa
|   goal 'default' [empty].

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh -s
| ddd
| ccc
| bbb
| aaa

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh --silent
| ddd
| ccc
| bbb
| aaa

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh -l
| Available goals:
|   default
|   aaa     : Documenatation for aaa
|   bbb     : Documenatation for bbb
|   ccc
|   ddd
|   fail
|   fail123

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh -d
| Resolved goals to reach for 'default':
|   ddd
|   ccc
|   bbb
|   aaa

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh fail
|   goal 'fail' ...
| stdout
|   goal 'fail' failed
@ stderr
? 1

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh fail123
|   goal 'fail123' ...
| stdout
|   goal 'fail123' failed
@ stderr
? 123

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals_unknown.sh
@ Goal 'a' has unknown dependency 'unknown':
@ tests/1_goals_unknown.sh:3:   @depends_on unknown
? 1

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals.sh zzz
@ Goal not found: zzz
? 1

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals_already_defined.sh
@ Goal 'a' is already defined:
@ tests/1_goals_already_defined.sh:5: @goal a
? 1

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals_no_name.sh
@ Goal must have a name:
@ tests/1_goals_no_name.sh:5: @goal
? 1

$ cd "$MYDIR"; ./$MAKESURE -f tests/1_goals_multi_reached_if.sh
@ Multiple @reached_if not allowed for a goal:
@ tests/1_goals_multi_reached_if.sh:4: @reached_if false
? 1
