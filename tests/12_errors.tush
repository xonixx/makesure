
$ cd "$MYDIR"; ./$MAKESURE -f tests/12_errors.sh
@ Shell code is not allowed outside goals/libs:
@ tests/12_errors.sh:2: echo 'code in prelude'
@ Only use @reached_if in @goal:
@ tests/12_errors.sh:5: @reached_if true
@ Only use @depends_on in @goal:
@ tests/12_errors.sh:6: @depends_on g1
@ Only use @doc in @goal:
@ tests/12_errors.sh:7: @doc Doc in prelude
@ Option 'unsupported' is not supported:
@ tests/12_errors.sh:8: @options unsupported
@ Provide at least one option:
@ tests/12_errors.sh:9: @options
@ Shell 'unsupported' is not supported:
@ tests/12_errors.sh:10: @shell unsupported
@ Shell '' is not supported:
@ tests/12_errors.sh:11: @shell
@ Only use @use_lib in @goal:
@ tests/12_errors.sh:12: @use_lib lib1
@ Goal must have a name:
@ tests/12_errors.sh:14: @goal
@ Goal 'g1' is already defined:
@ tests/12_errors.sh:20: @goal g1
@ Provide at least one dependency:
@ tests/12_errors.sh:21: @depends_on
@ Multiple @reached_if not allowed for a goal:
@ tests/12_errors.sh:23: @reached_if false
@ Only use @shell in prelude:
@ tests/12_errors.sh:28: @shell sh
@ Multiple @doc not allowed for a goal:
@ tests/12_errors.sh:34: @doc doc2
@ Only use @options in prelude:
@ tests/12_errors.sh:35: @options timing
@ Unknown directive: @unknown_directive:
@ tests/12_errors.sh:36: @unknown_directive arg
@ You can only use one @lib in a @goal:
@ tests/12_errors.sh:38: @use_lib lib2
@ Goal 'g1' has unknown dependency 'unknown':
@ tests/12_errors.sh:18: @depends_on unknown
@ Goal 'g2' uses unknown lib 'unknown':
@ tests/12_errors.sh:27: @use_lib unknown
@ Goal 'g13' uses unknown lib 'unknown1':
@ tests/12_errors.sh:41: @use_lib unknown1
@ Goal 'g14' has unknown dependency 'unknown1':
@ tests/12_errors.sh:44: @depends_on unknown1
? 1
